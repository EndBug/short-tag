"use strict";var __awaiter=this&&this.__awaiter||function(a,b,c,d){function e(a){return a instanceof c?a:new c(function(b){b(a)})}return new(c||(c=Promise))(function(c,f){function g(a){try{i(d.next(a))}catch(a){f(a)}}function h(a){try{i(d["throw"](a))}catch(a){f(a)}}function i(a){a.done?c(a.value):e(a.value).then(g,h)}i((d=d.apply(a,b||[])).next())})},__importStar=this&&this.__importStar||function(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b["default"]=a,b},__importDefault=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(exports,"__esModule",{value:!0});const core=__importStar(require("@actions/core")),github=__importStar(require("octonode")),semver_regex_1=__importDefault(require("semver-regex")),fs_1=require("fs"),child_process_1=require("child_process"),token=core.getInput("token"),push=core.getInput("push"),eventFile=process.env.GITHUB_EVENT_PATH||"/github/workflow/event.json",client=github.client(token||void 0),repo=client.repo(process.env.GITHUB_REPOSITORY);(function(){return __awaiter(this,void 0,void 0,function*(){try{const a=yield readJson(eventFile),b=a.ref;if("tag"!=a.ref_type)return void core.info("No tag has been added.");core.info(`Sha: ${a.head}\nTag: ${b}`);let c="",d="";if("string"==typeof b&&semver_regex_1.default().test(b))c=(b.match(semver_regex_1.default())||[""])[0],c&&(d=c[0]);else return core.info("No tag matching the SemVer regex has been found, no tags have been created.");if(d){const a=child_process_1.spawn("git",`tag --force -a v${d} -m "Link to version ${c}"`.split(" "));a.stdout.on("data",a=>console.log(`tag: ${a}`)),a.on("exit",a=>{if(0!=a&&core.setFailed(`The tag process failed with code ${a}. More info is probably written above.`),!!token&&(!push||"true"==push)){const a=child_process_1.spawn("git",["push","--tags"]);a.stdout.on("data",a=>console.log(`push: ${a}`)),a.on("exit",a=>{0!=a&&core.setFailed(`The push process failed with code ${a}. More info is probably written above.`)})}else token||core.setFailed("Although a match has been found, you requested to push the created tags but didn't provide a token.")})}}catch(a){core.error(a),core.setFailed(a)}})})().finally(()=>{core.setFailed("Fake problem")});function readJson(a){return __awaiter(this,void 0,void 0,function*(){const b=yield new Promise((b,c)=>fs_1.readFile(a,"utf8",(a,d)=>{a?c(a):b(d)}));return JSON.parse(b)})}function getTag(a){return __awaiter(this,void 0,void 0,function*(){const b=(yield repo.tagsAsync())[0];for(let c of b)if(c.commit.sha==a)return c.name})}